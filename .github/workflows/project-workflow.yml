name: Project Workflow

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Lint for ${{ inputs.project }} project"
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install flake8, isort and black
        id: installation
        run: |
          python -m pip install --upgrade pip
          pip install flake8 isort black
      - name: flake8
        if: steps.installation.outcome == 'success'
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 ./${{ inputs.project }} --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 ./${{ inputs.project }} --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: isort
        if: steps.installation.outcome == 'success'
        run: isort --check ./${{ inputs.project }}
      - name: black
        if: steps.installation.outcome == 'success'
        run: black --check .
  Test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Test for ${{ inputs.project }} project"
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        id: installation
        run: |
          python -m pip install --upgrade pip
          app_name=$(echo "${{ inputs.project }}" | tr '-' '_')
          requirements_path="${{ inputs.project }}/${app_name}/tests/requirements.txt"
          if [ -f ${requirements_path} ]; then pip install -r ${requirements_path}; else echo 'No requirements file found'; fi
      # TODO: Uncomment once project is executable. It needs to have a 'manage.py' to run the tests
      # - name: pytest
      #   if: steps.installation.outcome == 'success'
      #   run: |
      #     TEST_FILES=$(find . -path '*/${{ inputs.project }}/*/tests/*' -name 'test_*.py')
      #     pytest $TEST_FILES
